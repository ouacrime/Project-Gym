//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Management_Gym
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GestionGymEntities : DbContext
    {
        public GestionGymEntities()
            : base("name=GestionGymEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<abonner> abonners { get; set; }
        public virtual DbSet<coach> coaches { get; set; }
        public virtual DbSet<membere> memberes { get; set; }
        public virtual DbSet<offrir> offrirs { get; set; }
        public virtual DbSet<salle> salles { get; set; }
        public virtual DbSet<sport> sports { get; set; }
        public virtual DbSet<type_abonnement> type_abonnement { get; set; }
        public virtual DbSet<participer> participers { get; set; }
    
        public virtual int modifer_member(Nullable<int> idsport, Nullable<int> idmember, Nullable<int> idabonnement, Nullable<System.DateTime> datedebut, Nullable<System.DateTime> datefin, Nullable<int> prix)
        {
            var idsportParameter = idsport.HasValue ?
                new ObjectParameter("idsport", idsport) :
                new ObjectParameter("idsport", typeof(int));
    
            var idmemberParameter = idmember.HasValue ?
                new ObjectParameter("idmember", idmember) :
                new ObjectParameter("idmember", typeof(int));
    
            var idabonnementParameter = idabonnement.HasValue ?
                new ObjectParameter("idabonnement", idabonnement) :
                new ObjectParameter("idabonnement", typeof(int));
    
            var datedebutParameter = datedebut.HasValue ?
                new ObjectParameter("datedebut", datedebut) :
                new ObjectParameter("datedebut", typeof(System.DateTime));
    
            var datefinParameter = datefin.HasValue ?
                new ObjectParameter("datefin", datefin) :
                new ObjectParameter("datefin", typeof(System.DateTime));
    
            var prixParameter = prix.HasValue ?
                new ObjectParameter("prix", prix) :
                new ObjectParameter("prix", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modifer_member", idsportParameter, idmemberParameter, idabonnementParameter, datedebutParameter, datefinParameter, prixParameter);
        }
    
        public virtual int N_M_P_S(string name, ObjectParameter info)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("N_M_P_S", nameParameter, info);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> spGetactivemember()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetactivemember");
        }
    
        public virtual ObjectResult<Nullable<int>> spGetaddmember()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetaddmember");
        }
    
        public virtual ObjectResult<Nullable<int>> spGetemember()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetemember");
        }
    
        public virtual ObjectResult<Nullable<int>> spGetemembers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetemembers");
        }
    
        public virtual ObjectResult<spGetfichierRenouvell_Result> spGetfichierRenouvell()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetfichierRenouvell_Result>("spGetfichierRenouvell");
        }
    
        public virtual ObjectResult<spGetfichiersport_Result> spGetfichiersport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetfichiersport_Result>("spGetfichiersport");
        }
    
        public virtual ObjectResult<Nullable<int>> spGetinactivemember()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetinactivemember");
        }
    
        public virtual ObjectResult<spGetmember_Result> spGetmember(Nullable<int> idsalle)
        {
            var idsalleParameter = idsalle.HasValue ?
                new ObjectParameter("idsalle", idsalle) :
                new ObjectParameter("idsalle", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetmember_Result>("spGetmember", idsalleParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spGetprixaujour()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetprixaujour");
        }
    
        public virtual ObjectResult<Nullable<int>> spGetprixchoixsport(string sport)
        {
            var sportParameter = sport != null ?
                new ObjectParameter("sport", sport) :
                new ObjectParameter("sport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetprixchoixsport", sportParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spGetprixsport(string sport)
        {
            var sportParameter = sport != null ?
                new ObjectParameter("sport", sport) :
                new ObjectParameter("sport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetprixsport", sportParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spGetsport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spGetsport");
        }
    
        public virtual int spmodificationtarif()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmodificationtarif");
        }
    
        public virtual int spRenouvelle(Nullable<int> idsport, Nullable<int> idmember, Nullable<int> idabonnement, Nullable<System.DateTime> datedebut, Nullable<int> dure, Nullable<int> prix)
        {
            var idsportParameter = idsport.HasValue ?
                new ObjectParameter("idsport", idsport) :
                new ObjectParameter("idsport", typeof(int));
    
            var idmemberParameter = idmember.HasValue ?
                new ObjectParameter("idmember", idmember) :
                new ObjectParameter("idmember", typeof(int));
    
            var idabonnementParameter = idabonnement.HasValue ?
                new ObjectParameter("idabonnement", idabonnement) :
                new ObjectParameter("idabonnement", typeof(int));
    
            var datedebutParameter = datedebut.HasValue ?
                new ObjectParameter("datedebut", datedebut) :
                new ObjectParameter("datedebut", typeof(System.DateTime));
    
            var dureParameter = dure.HasValue ?
                new ObjectParameter("dure", dure) :
                new ObjectParameter("dure", typeof(int));
    
            var prixParameter = prix.HasValue ?
                new ObjectParameter("prix", prix) :
                new ObjectParameter("prix", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRenouvelle", idsportParameter, idmemberParameter, idabonnementParameter, datedebutParameter, dureParameter, prixParameter);
        }
    
        public virtual int supp_coach(string nomsport, ObjectParameter info)
        {
            var nomsportParameter = nomsport != null ?
                new ObjectParameter("nomsport", nomsport) :
                new ObjectParameter("nomsport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("supp_coach", nomsportParameter, info);
        }
    
        public virtual ObjectResult<spGetinfocrystalreport_Result> spGetinfocrystalreport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetinfocrystalreport_Result>("spGetinfocrystalreport");
        }
    }
}
